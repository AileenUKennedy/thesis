to check-turtles
  let n  0
while [n < count turtles][
  ask turtle n [
   ;; show count my-links
   ;; show breed
    ifelse breed = infants
    [

      if  count my-links <= (infant-degree - 1 )
       [
         show "too few"
         show count my-links
         set movenode1 turtle n
         let z 0
         while [z < (infant-degree - count my-links)]
         [
           ;;while z is less than the number of links needed to be added
           ;;pick a random turtle that isn't already a neighbour
           ;;count the number of links that node has and if its degree is
           ;;above the average degree + 2  set movenode2 one-of turtles with [ (self != movenode1) and (not link-neighbor? movenode1) ], pick another node.
           ;; keep
           show movenode1
          set movenode2 one-of turtles with [ (self != movenode1) and (not link-neighbor? movenode1) ]

          ask movenode2 [ show count my-links]
         ask movenode2[
           show "this stuff!!!"
           show movenode2
           ;;show node1
           show count my-links
           set nei-node2 count my-links
         ]
         while [nei-node2  >= (average-degree + 2) ]
          [
              set movenode2 one-of turtles with [ (self != movenode1) and (not link-neighbor? movenode1) ]

             ask movenode2[
           show "while lop"
           show movenode2
           ;;show node1
           show count my-links
           set nei-node2 count my-links
             ]
          ] ;; end of while loop

           ask movenode1 [ create-link-with movenode2 [ set color yellow  ] ]
          set z z + 1
         ]
       ]
      if  count my-links >  (infant-degree + 1)
      [
        show "too many"
        show count my-links
      ]
    ]
    [
      ifelse breed = youths
      [
        if  count my-links <= (youth-degree - 1 )
          [
            show " too few"
            show count my-links
          ]
        if count my-links >= ( youth-degree + 1)
        [
          show "too many"
          show count my-links
        ]
      ]
      [
        ifelse breed = adults
        [
          if  count my-links <= (adult-degree - 1 )
          [
            show "too few"
            show count my-links
          ]
          if count my-links >= (adult-degree + 1)
          [
            show "too many"
            show count my-links
          ]

        ]
        [
         if  count my-links <= (elder-degree - 1 )
         [
           show "too few"
           show count my-links
         ]
         if count my-links >= (elder-degree + 1)
         [
           show "too many"
           show count my-links
         ]

        ]
      ]

    ]

  ]
  set n n + 1
]



end